{"version":3,"sources":["PasswordValidator.js"],"names":["PasswordValidator","selector","$field","value","includes","errors","push","toUpperCase","Validator"],"mappings":";;;;;;;;;;;;IACMA,iB;;;AAEL,4BAAYC,QAAZ,EAAqB;AAAA;;AAAA,+HACdA,QADc;AAEpB;;;;6BAEU;AACV;;AAGA,OAAI,CAAC,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2B,OAAO,GAAP,IAAc,GAAd,IAAqB,GAArB,IAA4B,GAA5B,IAAmC,GAAnC,IAA0C,GAArE,CAAL,EAAgF;AAC/E,SAAKC,MAAL,CAAYC,IAAZ;AACA;;AAED,OAAI,KAAKJ,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2B,OAAO,GAAP,IAAc,GAAd,IAAqB,GAArB,IAA4B,GAA5B,IAAmC,GAAnC,IAA0C,GAA1C,IAAiD,GAAjD,IAAwD,GAAxD,IAA+D,GAA/D,IAAsE,GAAtE,IAA6E,GAA7E,IAAoF,GAA/G,CAAJ,EAAyH;AACxH,SAAKC,MAAL,CAAYC,IAAZ;AACA;;AAED,OAAI,CAAC,KAAKJ,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2B,KAAI,CAAJ,IAAS,CAAT,IAAc,CAAd,IAAmB,CAAnB,IAAwB,CAAxB,IAA6B,CAA7B,IAAkC,CAAlC,IAAuC,CAAvC,IAA4C,CAAvE,CAAL,EAAgF;AAC/E,SAAKC,MAAL,CAAYC,IAAZ;AACA;;AAED,OAAI,CAAC,KAAKJ,MAAL,CAAYC,KAAb,KAAuB,KAAKD,MAAL,CAAYK,WAAZ,EAA3B,EAAsD;AACrD,SAAKF,MAAL,CAAYC,IAAZ;AACA;;AAED,OAAI,CAAC,KAAKJ,MAAL,CAAYC,KAAb,KAAuB,KAAKD,MAAL,CAAYK,WAAZ,EAA3B,EAAsD;AACrD,SAAKF,MAAL,CAAYC,IAAZ;AACA;AACD;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAGA;;;;EApE8BE,S","file":"PasswordValidator.js","sourcesContent":["\nclass PasswordValidator extends Validator {\n\n\tconstructor(selector){\n\t\tsuper(selector);\n\t}\n\n\tvalidate() {\n\t\tsuper.validate();\n\n\n\t\tif (!this.$field.value.includes('@' || '?' || '!' || '$' || '%' || '#' || '&')) {\n\t\t\tthis.errors.push(`Must include (!@#$%&)`);\n\t\t}\n\n\t\tif (this.$field.value.includes('^' || '.' || ',' || '~' || '*' || '(' || ')' || '{' || '}' || '[' || ']' || '+' || '=')) {\n\t\t\tthis.errors.push(`Cannot include (^.,~*(){}[]+=)`);\n\t\t}\n\n\t\tif (!this.$field.value.includes(1|| 2 || 3 || 4 || 5 || 6 || 7 || 8 || 9 || 0)) {\n\t\t\tthis.errors.push(`Must include a number`)\n\t\t}\n\n\t\tif (!this.$field.value === this.$field.toUpperCase()) {\n\t\t\tthis.errors.push(`Must include an uppercase`)\n\t\t}\n\t\t\n\t\tif (!this.$field.value === this.$field.toUpperCase()) {\n\t\t\tthis.errors.push(`Must include an lowercase`)\n\t\t}\n\t\t// function charLength() {\n\t\t// \tif( this.$field.value.length >= 8 ) {\n\t\t// \t\treturn true;\n\t\t// \t} else{\n\t\t// \t this.errors.push(`Must be at least 8 characters`)\n\t\t// \t}\n\t\t// }\n\n\t\t// function lowercase() {\n\t\t// \tvar regex = /^(?=.*[a-z]).+$/; // Lowercase character pattern\n\n\t\t// \tif( regex.test(this.$field.value) ) {\n\t\t// \t\treturn true;\n\t\t// \t} else{\n\t\t// \t this.errors.push(`Must include a lowercase letter`)\n\t\t// \t}\n\t\t// }\n\n\t\t// function uppercase() {\n\t\t// \tvar regex = /^(?=.*[A-Z]).+$/; // Uppercase character pattern\n\n\t\t// \tif( regex.test(this.$field.value) ) {\n\t\t// \t\treturn true;\n\t\t// \t} else{\n\t\t// \t this.errors.push(`Must include a uppercase letter`)\n\t\t// \t}\n\t\t// }\n\n\t\t// function special() {\n\t\t// \tvar regex = /^(?=.*[0-9_\\W]).+$/; // Special character or number pattern\n\n\t\t// \tif( regex.test(this.$field.value) ) {\n\t\t// \t\treturn true;\n\t\t// \t} else{\n\t\t// \t this.errors.push(`Must include a special character or number`)\n\t\t// \t}\n\t\t// }\n\n\t\t\n\t}\n}\n\t\n\n\n\n\t\n\n"]}