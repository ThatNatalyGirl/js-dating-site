{"version":3,"sources":["PasswordValidator.js"],"names":["PasswordValidator","selector","$field","value","includes","errors","push","length","Validator"],"mappings":";;;;;;;;;;;;IACMA,iB;;;AAEL,+BAAYC,QAAZ,EAAqB;AAAA;;AAAA,qIACdA,QADc;AAEpB;;;;mCAEU;AACV;;AAEA,gBAAI,CAAC,KAAKC,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2B,GAA3B,CAAL,EAAsC;AACrC,qBAAKC,MAAL,CAAYC,IAAZ;AACA;;AAED,gBAAI,CAAC,KAAKJ,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2B,GAA3B,CAAL,EAAsC;AACrC,qBAAKC,MAAL,CAAYC,IAAZ;AACA;;AAED,gBAAI,CAAC,KAAKJ,MAAL,CAAYC,KAAZ,CAAkBC,QAAlB,CAA2B,GAA3B,CAAL,EAAsC;AACrC,qBAAKC,MAAL,CAAYC,IAAZ;AACA;;AAED,gBAAI,CAAC,KAAKJ,MAAL,CAAYC,KAAZ,CAAkBI,MAAlB,CAAyB,CAAzB,CAAL,EAAkC;AACjC,qBAAKF,MAAL,CAAYC,IAAZ;AACA;AACD;;;;EAxB8BE,S;;AA2BhC;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","file":"PasswordValidator.js","sourcesContent":["\nclass PasswordValidator extends Validator {\n\n\tconstructor(selector){\n\t\tsuper(selector);\n\t}\n\n\tvalidate() {\n\t\tsuper.validate();\n\n\t\tif (!this.$field.value.includes('@')) {\n\t\t\tthis.errors.push(`Must include a capital letter`);\n\t\t}\n\n\t\tif (!this.$field.value.includes('.')) {\n\t\t\tthis.errors.push(`Must include a lowercase letter`);\n\t\t}\n\n\t\tif (!this.$field.value.includes('.')) {\n\t\t\tthis.errors.push(`Cannot include`);\n\t\t}\n\n\t\tif (!this.$field.value.length(8)) {\n\t\t\tthis.errors.push(`Must include a special character`);\n\t\t}\n\t}\n}\n\n// (function(){\n//     var password = document.querySelector('.password');\n    \n//     var helperText = {\n//         charLength: document.querySelector('.helper-text .length'),\n//         lowercase: document.querySelector('.helper-text .lowercase'),\n//         uppercase: document.querySelector('.helper-text .uppercase'),\n//         special: document.querySelector('.helper-text .special')\n//     };\n    \n//     var pattern = {\n//         charLength: function() {\n//             if( password.value.length >= 8 ) {\n//                 return true;\n//             }\n//         },\n//         lowercase: function() {\n//             var regex = /^(?=.*[a-z]).+$/; // Lowercase character pattern\n\n//             if( regex.test(password.value) ) {\n//                 return true;\n//             }\n//         },\n//         uppercase: function() {\n//             var regex = /^(?=.*[A-Z]).+$/; // Uppercase character pattern\n\n//             if( regex.test(password.value) ) {\n//                 return true;\n//             }\n//         },\n//         special: function() {\n//             var regex = /^(?=.*[0-9_\\W]).+$/; // Special character or number pattern\n\n//             if( regex.test(password.value) ) {\n//                 return true;\n//             }\n//         }   \n//     };\n    \n//     // Listen for keyup action on password field\n//   password.addEventListener('keyup', function (){\n//         // Check that password is a minimum of 8 characters\n//         patternTest( pattern.charLength(), helperText.charLength );\n        \n//         // Check that password contains a lowercase letter      \n//         patternTest( pattern.lowercase(), helperText.lowercase );\n        \n//         // Check that password contains an uppercase letter\n//         patternTest( pattern.uppercase(), helperText.uppercase );\n        \n//         // Check that password contains a number or special character\n//         patternTest( pattern.special(), helperText.special );\n    \n//     // Check that all requirements are fulfilled\n//     if( hasClass(helperText.charLength, 'valid') &&\n//               hasClass(helperText.lowercase, 'valid') && \n//                 hasClass(helperText.uppercase, 'valid') && \n//               hasClass(helperText.special, 'valid')\n//         ) {\n//             addClass(password.parentElement, 'valid');\n//     }\n//     else {\n//       removeClass(password.parentElement, 'valid');\n//     }\n//     });\n    \n//     function patternTest(pattern, response) {\n//         if(pattern) {\n//       addClass(response, 'valid');\n//     }\n//     else {\n//       removeClass(response, 'valid');\n//     }\n//     }\n    \n//     function addClass(el, className) {\n//         if (el.classList) {\n//             el.classList.add(className);\n//         }\n//         else {\n//             el.className += ' ' + className;\n//         }\n//     }\n    \n//     function removeClass(el, className) {\n//         if (el.classList)\n//                 el.classList.remove(className);\n//             else\n//                 el.className = el.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\n//     }\n    \n//     function hasClass(el, className) {\n//         if (el.classList) {\n//             return el.classList.contains(className);    \n//         }\n//         else {\n//             new RegExp('(^| )' + className + '( |$)', 'gi').test(el.className); \n//         }\n//     }\n    \n// })();"]}